#!/usr/bin/env python
source-zsh --login True --overwrite-alias "echo loading xonsh foreign shell"
import os

if ${...}.get('INSIDE_EMACS', False):
    $TITLE = None
else:
    $TITLE = '{current_job:{} | }{user}@{hostname}: {short_cwd} | xonsh'

$HOME = os.path.expanduser('~')
$PATH.insert(0, $HOME + '/.bin')
$SHELL_TYPE = 'prompt_toolkit'

if $(which pyenv):
    $PYENV_ROOT = f'{$HOME}/.pyenv'
    source-zsh --overwrite-alias $(pyenv init -)
    if $(which pyenv-virtualenv):
        source-zsh --overwrite-alias $(pyenv virtualenv-init -)

if os.path.exists(f'{$HOME}/.emacs.d/bin'):
    $PATH.insert(0, $HOME + '/.emacs.d/bin')

# Enable AUTO_CD
$AUTO_CD = True
$COMPLETIONS_CONFIRM = True
# Ignore Errors
$XONSH_ENCODING_ERRORS = 'ignore'

$XONSH_GITSTATUS_HASH = "{NO_COLOR}:"
$XONSH_GITSTATUS_BRANCH = "{BOLD_PURPLE}"
$XONSH_GITSTATUS_OPERATION = "{CYAN}"
$XONSH_GITSTATUS_STAGED = "{RED}●"
$XONSH_GITSTATUS_CONFLICTS = "{RED}×"
$XONSH_GITSTATUS_CHANGED = "{BOLD_BLUE}+"
$XONSH_GITSTATUS_UNTRACKED = "{NO_COLOR}…"
$XONSH_GITSTATUS_CLEAN = "{GREEN}✓"
$XONSH_GITSTATUS_AHEAD = "{NO_COLOR}↑·"
$XONSH_GITSTATUS_BEHIND = "{NO_COLOR}↓·"
$SUPPRESS_BRANCH_TIMEOUT_MESSAGE = True

def pyenv_prompt():
    if $(pyenv version-name).replace('\n', '') != 'system':
        return $(pyenv version-name).replace('\n', '')

$PROMPT_FIELDS['pyenv_prompt'] = pyenv_prompt

$PROMPT = "{BOLD_WHITE}{pyenv_prompt}{NO_COLOR} {BOLD_BLUE}>{NO_COLOR} "
if 'DISPLAY' in ${...}:
    $RIGHT_PROMPT = "{gitstatus: {}} {BOLD_BLACK}{short_cwd}{NO_COLOR} "
else:
    $RIGHT_PROMPT = "{BOLD_BLACK}{short_cwd}{NO_COLOR} "

    $XONSH_SHOW_TRACEBACK = True

# Aliases (yeah... no shit, kid)
# Dotdrop
aliases['dt']="dotdrop -c ~/.dotdrop.yml"

aliases['ls'] = 'exa'
aliases['feh'] = 'feh -. --magick-timeout 1'
aliases['grep'] = 'grep -i --color=always'
aliases['mkdir'] = 'mkdir -p'
aliases['music'] = 'mps'
aliases['dd'] = 'dcfldd'
aliases['pyselect'] = 'source pyselect'
aliases['ping'] = 'ping -4'
aliases['lookup'] = '/usr/bin/dict'  # collision with Python dict

# dont go boom aliases
aliases['rm'] = 'safe-rm'

# advcp aliases for progress bars
aliases['cp'] = 'acp -g'
aliases['mv'] = 'amv -g'

# git aliases
aliases['gs'] = 'git status'  # collides with ghostscript but who cares?
aliases['ga'] = 'git add'
aliases['gd'] = 'git diff'
aliases['gch'] = 'git checkout'
aliases['gc'] = 'git commit -v'

# tryout aliases
aliases['pyi'] = ['python', 'setup.py', 'install']
aliases['pyd'] = ['python', 'setup.py', 'develop']

$BROWSER = "firefox"
$TERM = "rxvt-unicode-256color"
$EDITOR = '/usr/bin/emacs'

# Encoding
$LANG = "es_EC.UTF-8"
$LC_ALL = "es_EC.UTF-8"

# keep the prompt short
$DYNAMIC_CWD_WIDTH = '20%'

# ptk display stuff
$COMPLETIONS_BRACKETS = True
$COMPLETIONS_CONFIRM = True

# Less Stuff
$PAGER = 'eless'
$LESS = '-iMSx4 -FX'


def _pyclean():
    from path import Path
    d = Path($PWD)
    bflist = ["c", "o"]
    for b in bflist:
        files = d.walkfiles("*.py{}".format(b))
        for f in files:
            f.remove_p()
    for dir in d.walkdirs("__pycache__"):
        dir.removedirs_p()
    return True


aliases['pyc'] = _pyclean


def git_pull_current_branch():
    from subprocess import call, STDOUT, check_output
    if not call(["git", "branch"], stderr=STDOUT, stdout=open(os.devnull, 'w')) != 0:
        out = check_output(["git", "branch"]).decode("utf8")
        current = next(line for line in out.split("\n") if line.startswith("*"))
        branch = current.strip("*").strip()
        call(["git", "pull", "origin", branch])

aliases['ggpull'] = git_pull_current_branch

# Docker Compose
aliases["dco"]='docker-compose'
aliases["dcb"]='docker-compose build'
aliases["dce"]='docker-compose exec'
aliases["dcps"]='docker-compose ps'
aliases["dcrestart"]='docker-compose restart'
aliases["dcrm"]='docker-compose rm'
aliases["dcr"]='docker-compose run'
aliases["dcstop"]='docker-compose stop'
aliases["dcup"]='docker-compose up'
aliases["dcupd"]='docker-compose up -d'
aliases["dcdn"]='docker-compose down'
aliases["dcl"]='docker-compose logs'
aliases["dclf"]='docker-compose logs -f'
aliases["dcpull"]='docker-compose pull'
aliases["dcstart"]='docker-compose start'
